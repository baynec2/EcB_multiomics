knitr::opts_chunk$set(echo = TRUE)
## Fixing the stats files ##
protein_to_gene = readr::read_csv("../../../00_r_input_data/protein_id_to_gene.csv")
gene_description = read_csv("../../../00_r_input_data/all_protein_annotations.csv")
library(readr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
## Fixing the stats files ##
protein_to_gene = readr::read_csv("../../../00_r_input_data/protein_id_to_gene.csv")
gene_description = read_csv("../../../00_r_input_data/all_protein_annotations.csv")
## Loading all the data that will be needed ###
healthy = read_csv("../../../01_r_processed_data/Infected_vs_Healthy.csv") %>%
left_join(protein_to_gene,by = c("uniprotid" = "ProteinID")) %>%
left_join(gene_description, by = c("uniprotid" = "Entry")) %>%
mutate(url = paste0("https://www.uniprot.org/uniprotkb/",uniprotid,"/entry")) %>%
rename(Feature = Gene,
Description = Protein.names)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
## Fixing the stats files ##
protein_to_gene = readr::read_csv("../../../00_r_input_data/protein_id_to_gene.csv")
gene_description = read_csv("../../../00_r_input_data/all_protein_annotations.csv")
## Loading all the data that will be needed ###
healthy = read_csv("../../../01_r_processed_data/Infected_vs_Healthy.csv") %>%
left_join(protein_to_gene,by = c("uniprotid" = "ProteinID")) %>%
left_join(gene_description, by = c("uniprotid" = "Entry")) %>%
mutate(url = paste0("https://www.uniprot.org/uniprotkb/",uniprotid,"/entry")) %>%
rename(Feature = Gene,
Description = Protein.names)
EcB = read_csv("../../../01_r_processed_data/faecalis_v_faecium.csv") %>%
left_join(protein_to_gene,by = c("uniprotid" = "ProteinID"))%>%
left_join(gene_description, by = c("uniprotid" = "Entry")) %>%
mutate(url = paste0("https://www.uniprot.org/uniprotkb/",uniprotid,"/entry")) %>%
rename(Feature = Gene,
Description = Protein.names)
mortality = read_csv("../../../01_r_processed_data/death_vs_life.csv") %>%
select(-Gene) %>%
left_join(protein_to_gene,by = c("uniprotid" = "ProteinID"))%>%
left_join(gene_description, by = c("uniprotid" = "Entry")) %>%
mutate(url = paste0("https://www.uniprot.org/uniprotkb/",uniprotid,"/entry")) %>%
rename(Feature = Gene,
Description = Protein.names)
write_csv(healthy,"Infected_vs_Healthy.csv")
write_csv(EcB,"faecalis_v_faecium.csv")
write_csv(mortality,"death_vs_life.csv")
## Fixing the continuous data files ##
data = read_csv("../../../01_r_processed_data/quant_msstats_protein_level_data.csv")
#Loading in mapping file
mapping = readxl::read_excel("../../../00_r_input_data/proteomics_sample_mapping.xlsx") %>%
mutate(sample_id = paste0("plex",plex_number,".",TMT_channel)) %>%
select(sample_id,sample_name)
# Loading in the clinical metadata
cmd = read_csv("../../../00_r_input_data/clinical_metadata.csv")
mapping = inner_join(mapping,cmd,by = c("sample_name" = "sample_id"))
#Loading in data
data_md = inner_join(mapping,data,by = "sample_id")
#Converting into a matrix
f = data_md %>%
dplyr::select(sample_name,condition,death_during_admission,Gene,Abundance) %>%
dplyr::rename(Feature = Gene)
write_csv(f,"protein_data.csv")
### Healthy vs Infected ###
pl = read_csv("protein_data.csv")
infected_healthy_l = pl %>%
mutate(classlabels = case_when(condition %in% c("faecalis","faecium") ~ 1,
TRUE ~ 0))  %>%
mutate(classlabels = as.logical(classlabels)) %>%
# - messes up EFS for some reason, very annoying.
mutate(Feature = gsub("-","_",Feature))
infected_healthy_w = infected_healthy_l %>%
tidyr::pivot_wider(names_from = Feature,
values_from = Abundance) %>%
dplyr::select_if(~ !any(is.na(.))) %>%
select(-1,-2) %>%
#needs to be a dataframe or EFS freaks out.
as.data.frame()
set.seed(2)
## Running EFS ##
ensemble_result = EFS::ensemble_fs(infected_healthy_w,classnumber = 1,cor_threshold = 0)
## Getting EFS Result in Plotable Format
long = ensemble_result %>%
as.data.frame() %>%
tibble::rownames_to_column("model") %>%
pivot_longer(2:length(.),names_to = "Gene") %>%
#converting genes back to proper notation.
mutate(Gene = gsub("_","-",Gene)) %>%
rename(Feature = Gene)
# Ranking Biomarkers
top = long %>%
group_by(Feature) %>%
dplyr::summarise(sum = sum(value)) %>%
dplyr::arrange(-sum) %>%
tibble::rowid_to_column(var = "rank")
write_csv(top,"healthy_prot_EFS_rank.csv")
### Faecalis vs Faecium ###
fvf = pl %>%
filter(condition != "healthy") %>%
mutate(classlabels = case_when(condition %in% c("faecalis") ~ 1,
TRUE ~ 0)) %>%
mutate(classlabels = as.logical(classlabels)) %>%
# - messes up EFS for some reason, very annoying.
mutate(Feature = gsub("-","_",Feature))
fvf_w = fvf %>%
tidyr::pivot_wider(names_from = Feature,
values_from = Abundance) %>%
dplyr::select_if(~ !any(is.na(.))) %>%
select(-1,-2) %>%
#needs to be a dataframe or EFS freaks out.
as.data.frame()
set.seed(2)
## Running EFS ##
ensemble_result = EFS::ensemble_fs(fvf_w,classnumber = 1,cor_threshold = 0)
## Running EFS ##
ensemble_result = EFS::ensemble_fs(fvf_w,classnumber = 1,cor_threshold = 0)
## Running EFS ##
ensemble_result = EFS::ensemble_fs(fvf_w,classnumber = 1,cor_threshold = 0)
View(fvf_w)
shiny::runApp()
styler:::style_active_file()
